package com.mycompany.views.configuration.product;

import com.mycompany.interfaces.dao.CategoryDao;
import com.mycompany.interfaces.dao.SizeDao;
import com.mycompany.interfaces.dao.implementation.CategoryDaoImpl;
import com.mycompany.interfaces.dao.implementation.SizeDaoImpl;
import com.mycompany.interfaces.style.IStyleable;
import com.mycompany.models.Category;
import com.mycompany.models.CategorySize;
import com.mycompany.models.Size;
import java.awt.Color;
import java.awt.event.ItemListener;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class SizeConfiguration extends javax.swing.JPanel implements IStyleable {

    CategoryDao categoryDao = new CategoryDaoImpl();
    SizeDao sizeDao = new SizeDaoImpl();
    boolean isEditable = false;
    Size sizeEditable;

    public SizeConfiguration() {
        initComponents();
    }

    public SizeConfiguration(boolean lightOrDarkMode) {
        initComponents();
        updateStyles(lightOrDarkMode);
        initStyles();
        initCategory();
    }

    @Override
    public void updateStyles(boolean isDarkModeEnabled) {
        if (isDarkModeEnabled) {
            bg.putClientProperty("FlatLaf.style", "background: #172030");
            content.putClientProperty("FlatLaf.style", "background: #172030");

            categoryLbl.setForeground(Color.white);
            sizeLbl.setForeground(Color.white);
            includeSizeLbl.setForeground(Color.white);

            DataUpdateBtn.putClientProperty("FlatLaf.style", "background: #0c9294");
            btnClean.putClientProperty("FlatLaf.style", "background: #0c9294");
            btnEdit.putClientProperty("FlatLaf.style", "background: #0c9294");
            btnDelete.putClientProperty("FlatLaf.style", "background: #0c9294");
        } else {
            bg.putClientProperty("FlatLaf.style", "background: #FFFFFF");
            content.putClientProperty("FlatLaf.style", "background: #FFFFFF");
            categoryLbl.setForeground(Color.black);
            sizeLbl.setForeground(Color.black);
            includeSizeLbl.setForeground(Color.black);

            DataUpdateBtn.putClientProperty("FlatLaf.style", "background: #125AAD");
            btnClean.putClientProperty("FlatLaf.style", "background: #125AAD");
            btnDelete.putClientProperty("FlatLaf.style", "background: #FF3333");
            btnEdit.putClientProperty("FlatLaf.style", "background: #FFB72C");
        }
    }

    @Override
    public void initStyles() {
        categoryLbl.putClientProperty("FlatLaf.styleClass", "h2");
        sizeLbl.putClientProperty("FlatLaf.styleClass", "h2");
        includeSizeLbl.putClientProperty("FlatLaf.styleClass", "h2");

        sizeLbl.putClientProperty("JTextField.placeholderText", "Ingrese el nombre de la nueva talla.");

        btnClean.putClientProperty("JButton.buttonType", "roundRect");
        btnEdit.putClientProperty("JButton.buttonType", "roundRect");
        btnDelete.putClientProperty("JButton.buttonType", "roundRect");

        TableCategory.getTableHeader().setBackground(new Color(0, 0, 0));
        TableCategory.getTableHeader().setForeground(new Color(255, 255, 255));

        TableSize.getTableHeader().setBackground(new Color(0, 0, 0));
        TableSize.getTableHeader().setForeground(new Color(255, 255, 255));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        content = new javax.swing.JPanel();
        categoryLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableSize = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableCategory = new javax.swing.JTable();
        cmbCategory = new javax.swing.JComboBox<>();
        sizeLbl = new javax.swing.JLabel();
        txtNewSize = new javax.swing.JTextField();
        DataUpdateBtn = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        includeSizeLbl = new javax.swing.JLabel();

        bg.setBackground(new java.awt.Color(255, 255, 255));

        content.setBackground(new java.awt.Color(255, 255, 255));

        categoryLbl.setText("Categoria:");

        TableSize.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tallas de Categoria Seleccionada"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableSize.setGridColor(new java.awt.Color(153, 153, 153));
        TableSize.setShowGrid(true);
        jScrollPane1.setViewportView(TableSize);

        TableCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre Categorias", "Incluir Talla"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableCategory.setToolTipText("");
        TableCategory.setGridColor(new java.awt.Color(153, 153, 153));
        TableCategory.setShowGrid(true);
        TableCategory.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TableCategory);

        cmbCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCategoryItemStateChanged(evt);
            }
        });

        sizeLbl.setText("Nombre de nueva talla:");

        DataUpdateBtn.setBackground(new java.awt.Color(18, 90, 173));
        DataUpdateBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DataUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        DataUpdateBtn.setText("Subir");
        DataUpdateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DataUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataUpdateBtnActionPerformed(evt);
            }
        });

        btnClean.setBackground(new java.awt.Color(18, 90, 173));
        btnClean.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClean.setForeground(new java.awt.Color(255, 255, 255));
        btnClean.setText("Limpiar");
        btnClean.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(255, 183, 44));
        btnEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Editar");
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Borrar");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        includeSizeLbl.setText("Incluir nueva talla en otras categorias:");

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLayout.createSequentialGroup()
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(sizeLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNewSize)
                        .addGap(41, 41, 41)
                        .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(contentLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                            .addGroup(contentLayout.createSequentialGroup()
                                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(contentLayout.createSequentialGroup()
                                        .addComponent(includeSizeLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(52, 52, 52))
                                    .addGroup(contentLayout.createSequentialGroup()
                                        .addComponent(categoryLbl)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbCategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(172, 172, 172))
                            .addComponent(jScrollPane1))))
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btnEdit))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLayout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(DataUpdateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(205, 205, 205))
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLbl)
                    .addComponent(cmbCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sizeLbl)
                            .addComponent(txtNewSize, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(includeSizeLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DataUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(contentLayout.createSequentialGroup()
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DataUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataUpdateBtnActionPerformed
        upData();
    }//GEN-LAST:event_DataUpdateBtnActionPerformed
    private void upData() {
        String sizeName = txtNewSize.getText().trim();
        if (sizeName.isEmpty() || sizeName.isBlank()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Introduzca el nombre de la nueva marca. \n", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            txtNewSize.requestFocus();
            return;
        }
        Size size = isEditable ? sizeEditable : new Size();
        size.setName(sizeName);
        traverseCategoryTable(TableCategory, size);

        try {

            if (isEditable) {
                sizeDao.modify(size);
            } else {
                sizeDao.record(size);
            }
            String succecssMsg = isEditable ? "modificados" : "registrados";
            javax.swing.JOptionPane.showMessageDialog(this, "Datos " + succecssMsg + " correctamente. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            loadSizeByCategorySelected();
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error. \n" + ex.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    public void traverseCategoryTable(JTable table, Size size) {
        int rowCount = table.getRowCount();
        int categoryColumn = 0;
        int checkColumn = 1;

        for (int i = 0; i < rowCount; i++) {
            Boolean checkedValue = (Boolean) table.getValueAt(i, checkColumn);
            if (Boolean.TRUE.equals(checkedValue)) {
                Category category = (Category) table.getValueAt(i, categoryColumn);
                size.addCategorySize(new CategorySize(category, size));
            }
        }
    }
    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        cleanFields();
    }//GEN-LAST:event_btnCleanActionPerformed
    private void cleanFields() {
        isEditable = false;
        btnDelete.setEnabled(isEditable);
        txtNewSize.setText("");
        sizeLbl.setText("Nombre de nueva talla:");
        DataUpdateBtn.setText("Subir");
        initCategory();
    }
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        setEditableSize();
    }//GEN-LAST:event_btnEditActionPerformed
    private void setEditableSize() {
        if (TableSize.getSelectedRow() == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Debes seleccionar un tipo a editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else {
            sizeEditable = (Size) TableSize.getValueAt(TableSize.getSelectedRow(), 0);
            loadCategoryTableEditable(sizeEditable);

            isEditable = true;
            btnDelete.setEnabled(isEditable);
            sizeLbl.setText("Editar nombre de talla:");
            includeSizeLbl.setText("Editar talla en otras categorias:");
            DataUpdateBtn.setText("Editar");
            txtNewSize.setText(sizeEditable.getName());
        }
    }

    private void loadCategoryTableEditable(Size size) {
        try {
            List<Category> categoryList = sizeDao.getCategoriesBySizeSelected(size.getId());
            DefaultTableModel model = (DefaultTableModel) TableCategory.getModel();
            model.setRowCount(0);

            AtomicInteger index = new AtomicInteger(0);
            categoryList.forEach(c -> {
                model.addRow(new Object[]{c});
                model.setValueAt(true, index.getAndIncrement(), 1);
            });
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error. \n" + ex.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }

    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int confirmed = javax.swing.JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar estos datos? \n", "CONFIMARCIÓN", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE);
        if (confirmed == javax.swing.JOptionPane.YES_OPTION) {
            boolean deleted = deleteSizeFromCategories();
            if (deleted) {
                javax.swing.JOptionPane.showMessageDialog(this, "Datos eliminados correctamente. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                cleanFields();
            }
        }

    }//GEN-LAST:event_btnDeleteActionPerformed
    private boolean deleteSizeFromCategories() {
        Size size = sizeEditable;
        traverseCategoryTable(TableCategory, size);
        boolean deleted = false;
        try {
            deleted = sizeDao.delete(size);
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error. \n" + ex.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        return deleted;
    }
    private void cmbCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCategoryItemStateChanged
        loadSizeByCategorySelected();
    }//GEN-LAST:event_cmbCategoryItemStateChanged
    private void loadSizeByCategorySelected() {
        try {
            DefaultTableModel model = (DefaultTableModel) TableSize.getModel();
            model.setRowCount(0);
            Category category = (Category) cmbCategory.getSelectedItem();
            List<Size> sizeList = categoryDao.getSizes(category.getId());
            sizeList.forEach(s -> model.addRow(new Object[]{s}));
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error. \n" + e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DataUpdateBtn;
    private javax.swing.JTable TableCategory;
    private javax.swing.JTable TableSize;
    private javax.swing.JPanel bg;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel categoryLbl;
    private javax.swing.JComboBox<Category> cmbCategory;
    private javax.swing.JPanel content;
    private javax.swing.JLabel includeSizeLbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel sizeLbl;
    private javax.swing.JTextField txtNewSize;
    // End of variables declaration//GEN-END:variables

    private void initCategory() {
        try {
            List<Category> categoryList = categoryDao.consult();
            ItemListener[] itemListeners = cmbCategory.getListeners(ItemListener.class);
            DefaultTableModel modelCategory = (DefaultTableModel) TableCategory.getModel();
            DefaultTableModel modelSize = (DefaultTableModel) TableSize.getModel();

            removeTableContent(modelCategory);
            removeTableContent(modelSize);

            removeEventListener(cmbCategory, itemListeners);
            cmbCategory.removeAllItems();
            categoryList.forEach(c -> {
                cmbCategory.addItem(c);
                modelCategory.addRow(new Object[]{c});
            });
            addEventListener(cmbCategory, itemListeners);
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error. \n" + e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    private void removeTableContent(DefaultTableModel model) {
        model.setRowCount(0);
    }

    private void removeEventListener(JComboBox<Category> combobox, ItemListener[] itemListeners) {
        for (ItemListener itemListener : itemListeners) {
            combobox.removeItemListener(itemListener);
        }
    }

    private void addEventListener(JComboBox<Category> combobox, ItemListener[] itemListeners) {
        combobox.setSelectedIndex(-1);
        for (ItemListener itemListener : itemListeners) {
            combobox.addItemListener(itemListener);
        }
    }
}
