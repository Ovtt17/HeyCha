package com.mycompany.views.configuration.product;

import com.mycompany.interfaces.dao.CategoryDao;
import com.mycompany.interfaces.dao.implementation.CategoryDaoImpl;
import com.mycompany.interfaces.style.IStyleable;
import com.mycompany.models.Category;
import com.mycompany.models.Size;
import java.awt.Color;
import java.awt.event.ItemListener;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

public class CategoryConfiguration extends javax.swing.JPanel implements IStyleable {

    CategoryDao categoryDao = new CategoryDaoImpl();
    boolean isEditable = false;
    Category categoryEditable;

    public CategoryConfiguration(boolean lightOrDarkMode) {
        initComponents();
        updateStyles(lightOrDarkMode);
        initStyles();
        loadCategories();

    }

    @Override
    public void updateStyles(boolean isDarkModeEnabled) {
        if (isDarkModeEnabled) {
            bg.putClientProperty("FlatLaf.style", "background: #172030");
            content.putClientProperty("FlatLaf.style", "background: #172030");
            newCategoryLbl.setForeground(Color.white);
            categoriesLbl.setForeground(Color.white);

            DataUpdateBtn.putClientProperty("FlatLaf.style", "background: #0c9294");
            btnClean.putClientProperty("FlatLaf.style", "background: #0c9294");
            btnEdit.putClientProperty("FlatLaf.style", "background: #0c9294");
            btnDelete.putClientProperty("FlatLaf.style", "background: #0c9294");
        } else {
            bg.putClientProperty("FlatLaf.style", "background: #FFFFFF");
            content.putClientProperty("FlatLaf.style", "background: #FFFFFF");
            newCategoryLbl.setForeground(Color.black);
            categoriesLbl.setForeground(Color.black);

            DataUpdateBtn.putClientProperty("FlatLaf.style", "background: #125AAD");
            btnClean.putClientProperty("FlatLaf.style", "background: #125AAD");
            btnDelete.putClientProperty("FlatLaf.style", "background: #FF3333");
            btnEdit.putClientProperty("FlatLaf.style", "background: #FFB72C");
        }
    }

    @Override
    public void initStyles() {
        newCategoryLbl.putClientProperty("FlatLaf.styleClass", "h2");
        categoriesLbl.putClientProperty("FlatLaf.styleClass", "h2");
        newCategoryTxt.putClientProperty("JTextField.placeholderText", "Ingrese el nombre de la nueva categoria.");

        btnClean.putClientProperty("JButton.buttonType", "roundRect");
        btnEdit.putClientProperty("JButton.buttonType", "roundRect");
        btnDelete.putClientProperty("JButton.buttonType", "roundRect");

        TableCategory.getTableHeader().setBackground(new Color(0, 0, 0));
        TableCategory.getTableHeader().setForeground(new Color(255, 255, 255));
    }

    private void loadCategories() {
        try {
            DefaultTableModel model = (DefaultTableModel) TableCategory.getModel();
            List<Category> categoryList = categoryDao.consult();

            model.setRowCount(0);
            ItemListener[] itemListeners = cmbCategories.getListeners(ItemListener.class);
            removeEventListener(cmbCategories, itemListeners);
            cmbCategories.removeAllItems();
            addEventListener(cmbCategories, itemListeners);
            categoryList.forEach(c -> {
                cmbCategories.addItem(c);
                model.addRow(new Object[]{c.getId(), c.getName()});
            });

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurri√≥ un error. \n" + e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }

    }

    private void removeEventListener(JComboBox<Category> combobox, ItemListener[] itemListeners) {
        for (ItemListener itemListener : itemListeners) {
            combobox.removeItemListener(itemListener);
        }
    }

    private void addEventListener(JComboBox<Category> combobox, ItemListener[] itemListeners) {
        combobox.setSelectedIndex(-1);
        for (ItemListener itemListener : itemListeners) {
            combobox.addItemListener(itemListener);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        content = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableCategory = new javax.swing.JTable();
        newCategoryLbl = new javax.swing.JLabel();
        newCategoryTxt = new javax.swing.JTextField();
        DataUpdateBtn = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        categoriesLbl = new javax.swing.JLabel();
        cmbCategories = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableSizes = new javax.swing.JTable();

        bg.setBackground(new java.awt.Color(255, 255, 255));

        content.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        TableCategory.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TableCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableCategory.setToolTipText("");
        TableCategory.setColumnSelectionAllowed(true);
        TableCategory.setGridColor(new java.awt.Color(153, 153, 153));
        TableCategory.setRowHeight(30);
        TableCategory.setShowGrid(true);
        TableCategory.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(TableCategory);
        TableCategory.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (TableCategory.getColumnModel().getColumnCount() > 0) {
            TableCategory.getColumnModel().getColumn(0).setHeaderValue("ID");
        }

        newCategoryLbl.setText("Nueva Categoria:");

        newCategoryTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        DataUpdateBtn.setBackground(new java.awt.Color(18, 90, 173));
        DataUpdateBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DataUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        DataUpdateBtn.setText("Subir");
        DataUpdateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DataUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataUpdateBtnActionPerformed(evt);
            }
        });

        btnClean.setBackground(new java.awt.Color(18, 90, 173));
        btnClean.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClean.setForeground(new java.awt.Color(255, 255, 255));
        btnClean.setText("Limpiar");
        btnClean.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(255, 183, 44));
        btnEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Editar");
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 51, 51));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Borrar");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        categoriesLbl.setText("Tallas de  categoria ejemplar:");

        cmbCategories.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCategoriesItemStateChanged(evt);
            }
        });

        jScrollPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        TableSizes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TableSizes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tallas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableSizes.setToolTipText("");
        TableSizes.setGridColor(new java.awt.Color(153, 153, 153));
        TableSizes.setRowHeight(30);
        TableSizes.setShowGrid(true);
        TableSizes.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(TableSizes);
        TableSizes.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLayout.createSequentialGroup()
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(contentLayout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(contentLayout.createSequentialGroup()
                                .addComponent(categoriesLbl)
                                .addGap(18, 18, 18)
                                .addComponent(cmbCategories, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(89, 89, 89))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLayout.createSequentialGroup()
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(contentLayout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(DataUpdateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(contentLayout.createSequentialGroup()
                                .addComponent(newCategoryLbl)
                                .addGap(18, 18, 18)
                                .addComponent(newCategoryTxt)
                                .addGap(18, 18, 18)
                                .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(45, 45, 45)))
                .addGap(18, 18, 18)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete))
                .addGap(59, 59, 59))
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newCategoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newCategoryLbl)
                    .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoriesLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCategories, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DataUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DataUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataUpdateBtnActionPerformed
        upData();
    }//GEN-LAST:event_DataUpdateBtnActionPerformed
    private void upData() {
        try {
            String name = newCategoryTxt.getText().trim();

            if (name.isEmpty() || name.isBlank()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Introduzca el nombre de la nueva marca. \n", "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                newCategoryTxt.requestFocus();
                return;
            }
            Category category = isEditable ? categoryEditable : new Category();
            Category categorySelectedAsExample = (Category) cmbCategories.getSelectedItem();
            category.setName(name);

            if (isEditable) {
                categoryDao.modify(category);
            } else {
                categoryDao.record(category, categorySelectedAsExample.getId());
            }

            String succecssMsg = isEditable ? "modificado" : "registrado";
            javax.swing.JOptionPane.showMessageDialog(this, "Datos " + succecssMsg + " correctamente. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            if (!isEditable) {
                cleanFields();
            }
            loadCategories();
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurri√≥ un error. \n" + e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cleanFields() {
        isEditable = false;
        newCategoryTxt.setText("");
        DataUpdateBtn.setText("Subir");
        newCategoryLbl.setText("Nueva Categoria:");
    }

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        cleanFields();
    }//GEN-LAST:event_btnCleanActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        setEditableCategory();
    }//GEN-LAST:event_btnEditActionPerformed

    private void setEditableCategory() {
        DefaultTableModel tableModel = (DefaultTableModel) TableCategory.getModel();
        if (TableCategory.getSelectedRow() == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Debes seleccionar un tipo a editar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } else {
            isEditable = true;
            newCategoryLbl.setText("Editar Categoria:");
            DataUpdateBtn.setText("Editar");
            Integer id = (Integer) tableModel.getValueAt(TableCategory.getSelectedRow(), 0);
            String name = (String) tableModel.getValueAt(TableCategory.getSelectedRow(), 1);
            categoryEditable = new Category(id, name);
            cmbCategories.setSelectedItem(categoryEditable);
            loadSizeOfCategorySelected();
            newCategoryTxt.setText(name);
        }
    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteType();
        cleanFields();
        loadCategories();
    }//GEN-LAST:event_btnDeleteActionPerformed
    private void deleteType() {
        DefaultTableModel tableModel = (DefaultTableModel) TableCategory.getModel();
        if (TableCategory.getSelectedRow() == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Debes seleccionar una categoria a eliminar. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int confirmed = javax.swing.JOptionPane.showConfirmDialog(this, "¬øEst√° seguro de eliminar estos datos? \n", "CONFIMARCI√ìN", javax.swing.JOptionPane.YES_NO_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE);
        if (confirmed == javax.swing.JOptionPane.YES_OPTION) {
            Integer id = (Integer) tableModel.getValueAt(TableCategory.getSelectedRow(), 0);
            String name = (String) tableModel.getValueAt(TableCategory.getSelectedRow(), 1);
            try {
                categoryDao.delete(new Category(id, name));
            } catch (Exception ex) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ocurri√≥ un error. \n" + ex.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    private void cmbCategoriesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCategoriesItemStateChanged
        loadSizeOfCategorySelected();
    }//GEN-LAST:event_cmbCategoriesItemStateChanged
    private void loadSizeOfCategorySelected() {
        try {
            DefaultTableModel model = (DefaultTableModel) TableSizes.getModel();
            model.setRowCount(0);
            Category category = (Category) cmbCategories.getSelectedItem();
            List<Size> sizeList = categoryDao.getSizes(category.getId());
            sizeList.forEach(s -> model.addRow(new Object[]{s}));
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurri√≥ un error. \n" + e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DataUpdateBtn;
    private javax.swing.JTable TableCategory;
    private javax.swing.JTable TableSizes;
    private javax.swing.JPanel bg;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel categoriesLbl;
    private javax.swing.JComboBox<Category> cmbCategories;
    private javax.swing.JPanel content;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel newCategoryLbl;
    private javax.swing.JTextField newCategoryTxt;
    // End of variables declaration//GEN-END:variables

}
