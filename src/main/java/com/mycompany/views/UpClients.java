package com.mycompany.views;

import ImplementationDAO.DAOClientsImpl;
import com.mycompany.interfaces.DAOClients;
import com.mycompany.interfaces.Styleable;
import com.mycompany.models.ModelClients;
import java.awt.Color;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

public class UpClients extends javax.swing.JPanel implements Styleable {

    boolean isEditable;
    ModelClients clientEditable;

    public UpClients(boolean isDarkModeEnabled) {
        initComponents();
        updateStyles(isDarkModeEnabled);
        initStyles();
    }

    public UpClients(ModelClients client, boolean isDarkModeEnabled) {
        initComponents();
        isEditable = true;
        clientEditable = client;
        updateStyles(isDarkModeEnabled);
        initStyles();
    }

    @Override
    public void updateStyles(boolean isDarkModeEnabled) {
        if (isDarkModeEnabled) {
            title.setForeground(Color.white);
            bg.putClientProperty("FlatLaf.style", "background: #172030");
            DataUpdateBtn.putClientProperty("FlatLaf.style", "background: #0c9294");
        } else {
            title.setForeground(Color.black);
            bg.putClientProperty("FlatLaf.style", "background: #FFFFFF");
            DataUpdateBtn.putClientProperty("FlatLaf.style", "background: #125AAD");
        }
    }

    private void initStyles() {
        title.putClientProperty("FlatLaf.styleClass", "h1");
        nameLbl.putClientProperty("FlatLaf.styleClass", "h2");
        cellphoneLbl.putClientProperty("FlatLaf.styleClass", "h2");
        cityLbl.putClientProperty("FlatLaf.styleClass", "h2");
        directionLbl.putClientProperty("FlatLaf.styleClass", "h2");
        AutoCompleteDecorator.decorate(cityCmb);
        nameTxt.putClientProperty("JTextField.placeholderText", "Ingrese el nombre del cliente.");
        cellphoneTxt.putClientProperty("JTextField.placeholderText", "Ingrese el telefono del cliente.");

        directionTxt.putClientProperty("JTextField.placeholderText", "Ingrese la dirección donde vive el cliente.");
        try {
            DAOClients dao = new DAOClientsImpl();
            dao.loadCmb(cityCmb);
        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error. \n" + e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }

        if (isEditable) {
            title.setText("Editar producto.");
            DataUpdateBtn.setText("Guardar");

            if (clientEditable != null) {
                nameTxt.setText(clientEditable.getName());
                cellphoneTxt.setText(clientEditable.getCellphone().toString());
                cityCmb.setSelectedItem(clientEditable.getCity());
                directionTxt.setText(clientEditable.getDirection());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        nameLbl = new javax.swing.JLabel();
        cellphoneLbl = new javax.swing.JLabel();
        cityLbl = new javax.swing.JLabel();
        directionLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        directionTxt = new javax.swing.JTextArea();
        cellphoneTxt = new javax.swing.JTextField();
        nameTxt = new javax.swing.JTextField();
        DataUpdateBtn = new javax.swing.JButton();
        cityCmb = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(764, 436));

        bg.setBackground(new java.awt.Color(255, 255, 255));

        title.setText("Subir Nuevo Cliente.");

        nameLbl.setText("Nombre:");

        cellphoneLbl.setText("Teléfono:");

        cityLbl.setText("Ciudad:");

        directionLbl.setText("Dirección:");

        directionTxt.setColumns(20);
        directionTxt.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        directionTxt.setRows(5);
        jScrollPane1.setViewportView(directionTxt);

        DataUpdateBtn.setBackground(new java.awt.Color(18, 90, 173));
        DataUpdateBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        DataUpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        DataUpdateBtn.setText("Subir");
        DataUpdateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DataUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DataUpdateBtnActionPerformed(evt);
            }
        });

        cityCmb.setEditable(true);
        cityCmb.setMaximumRowCount(10);

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(cellphoneLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                .addGap(380, 380, 380))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(cityLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(390, 390, 390))
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(directionLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(377, 377, 377))
                            .addComponent(nameTxt)
                            .addComponent(jScrollPane1)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addComponent(nameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(384, 384, 384))
                            .addComponent(cityCmb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cellphoneTxt))
                        .addGap(45, 45, 45)
                        .addComponent(DataUpdateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                        .addGap(37, 37, 37))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(240, 240, 240))))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cellphoneLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cellphoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cityLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cityCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(directionLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(DataUpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DataUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DataUpdateBtnActionPerformed
        String name = nameTxt.getText().trim();
        Integer cellphone = null;
        if (cellphoneTxt.getText().trim().length() != 8) {
            javax.swing.JOptionPane.showMessageDialog(this, "El número de teléfono debe tener 8 digitos. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            cellphoneTxt.requestFocus();
            return;
        }
        try {
            cellphone = Integer.parseInt(cellphoneTxt.getText().trim());
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "El número de teléfono debe incluir solamente números. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            cellphoneTxt.requestFocus();
            return;
        }
        String city = cityCmb.getSelectedIndex() == -1 ? null : cityCmb.getSelectedItem().toString();
        String direction = directionTxt.getText().trim();

        boolean incorrectData = name.isEmpty() || cellphone == null || city == null || direction.isEmpty();
        if (incorrectData) {
            javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campos correctamente. \n", "AVISO", javax.swing.JOptionPane.ERROR_MESSAGE);
            nameTxt.requestFocus();
            return;
        }

        ModelClients client = isEditable ? clientEditable : new ModelClients();
        client.setName(name);
        client.setCellphone(cellphone);
        client.setCity(city);
        client.setDirection(direction);
        
        try {
            DAOClients dao = new DAOClientsImpl();
            if (!isEditable) {
                dao.record(client);
            } else {
                dao.modify(client);
            }
            String succecssMsg = isEditable ? "modificado" : "registrado";
            javax.swing.JOptionPane.showMessageDialog(this, "Datos " + succecssMsg + " correctamente. \n", "AVISO", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            if (!isEditable) {
                emptyFields();
            }
        } catch (Exception e) {
            String errorMsg = isEditable ? "modificar" : "registrar";
            javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error al " + errorMsg + " los datos. \n" + e.getMessage(), "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_DataUpdateBtnActionPerformed
    private void emptyFields() {
        nameTxt.setText("");
        cellphoneTxt.setText("");
        cityCmb.setSelectedIndex(-1);
        directionTxt.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DataUpdateBtn;
    private javax.swing.JPanel bg;
    private javax.swing.JLabel cellphoneLbl;
    private javax.swing.JTextField cellphoneTxt;
    private javax.swing.JComboBox<String> cityCmb;
    private javax.swing.JLabel cityLbl;
    private javax.swing.JLabel directionLbl;
    private javax.swing.JTextArea directionTxt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

}
